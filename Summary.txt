Arpan Rakesh Patel
Late Days Left: 5

Assignment Summary:

The purpose of this assignment was to develop a server program that functions as a key-value store, allowing a client to perform basic operations such as PUT, GET, and DELETE operations. The implementation involves using a Map to set up the key-value store and incorporating two distinct L4 communication protocols: UDP and TCP. The client program must be able to communicate with the server using either UDP or TCP, and it should handle server failures by employing a timeout mechanism. Additionally, a simple protocol was needed to be designed for packet communication, and both the client and server must be robust to malformed packets. The client implementation required accepting command line arguments for the server's hostname or IP address and the port number. It needed to be robust to server failures by implementing a timeout mechanism and handle malformed or unrequested datagram packets. The client log had to be timestamped for every line printed. Two instances of the client were required, one using TCP and the other using UDP.  The server implementation involved accepting the port number for listening to datagram packets. It needed to run indefinitely, displaying the received requests and responses in a human-readable fashion. The server had to be resilient to malformed datagram packets and timestamp its output.

Technical Impression:

The technical impression of this assignment is that it provides an opportunity to gain hands-on experience in building a server-client system with different communication protocols which was very good. It required proper study of materials, careful consideration of error handling, packet formatting, and time-stamping. The project relates to the course materials. I found the time to be adequate and well distributed for the same. During the implementation, I utilized the map.properties file for reading and writing data using InputStream and OutputStream, respectively. This approach allowed for easy management of key-value pairs and facilitated the functionality of the key-value store. Additionally, I defined various helper methods to log requests, responses, and errors, ensuring that the system operates smoothly and provides clear feedback.

Overall, this assignment allowed me to explore more network programming concepts, including socket communication, server responsiveness, and handling different types of requests. It served as a very good foundation for upcoming projects that will involve more advanced functionalities. The deliverables include the Java source code files for the client and server programs, along with any additional support code, and the executive summary.
